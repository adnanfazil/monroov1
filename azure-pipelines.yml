trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sshHost: "ec2-user@your-ec2-instance-ip"  # Replace with your EC2 user and public IP
  sshKey: $(sshKey)  # The SSH key will be stored securely in Azure DevOps
  appName: "Monroobackend"  # Replace with your application's name

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'  # Use the Node.js version compatible with your app
    checkLatest: true

- script: |
    npm install
#npm run build  # If your application requires a build step
  displayName: 'Install Dependencies and Build'

- script: |
    mkdir -p $(Pipeline.Workspace)/temp
    cp -R $(Build.SourcesDirectory)/* $(Pipeline.Workspace)/temp/
    tar -czf $(Pipeline.Workspace)/$(appName).tar.gz -C $(Pipeline.Workspace)/temp .
  displayName: 'Copy to Temp Directory and Compress Application'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'AWS-EC2-CustomPort'  # Use the service connection with the custom SSH port
    sourceFolder: '$(Pipeline.Workspace)'
    contents: '$(appName).tar.gz'
    targetFolder: '/home/ec2-user/app'  # Update with the path on your EC2 instance
    cleanTargetFolder: true

- task: SSH@0
  inputs:
    sshEndpoint: 'AWS-EC2-CustomPort'  # Use the service connection with the custom SSH port
    runOptions: 'inline'
    inline: |
      cd /home/ec2-user/app
      tar -xzf $(appName).tar.gz
      rm $(appName).tar.gz
      cp -r ../monroobackend/public/* public/
      npm install
      pm2 stop all || true  # Stop any existing Node.js processes
      pm2 start app.js  # Start the application with PM2
      pm2 start swagger.js
      pm2 start bin/www.js
  displayName: 'Deploy and Start Application'